url: "https://lichess.org/" # lichess base URL

engine: # engine settings
  dir: "../../target/release-lto/" # dir containing engines, relative to this project
  name: "goldfish" # binary name of the engine to use
  protocol: "uci" # "uci" or "xboard"
  polyglot:
    enabled: true # activate polyglot book
    book:
      standard: "../../openingbooks/gm2001.bin" # book file path of standard chess
    max_depth: 25 # half move max depth
    min_weight: 1 # selects move with highest weight but not below this value
    selection: "weighted_random" # move slection is one of "weighted_random", "uniform_random" or "best_move" (but not below the min_weight in 2. and 3. case)
  uci_options: # arbitrary UCI options passed to the engine
    Hash: 1024 # max memory (in megabytes) the engine can allocate
    SyzygyPath: ../../syzygy/
  silence_stderr: false # some engines (yes you, leela) are very noisy

abort_time: 20 # time to abort a game in seconds when there is no activity
fake_think_time: false # artificially slow down the bot to pretend like it's thinking

challenge: # incoming challenges
  concurrency: 2 # number of games to play simultaneously
  sort_by: "first" # possible values: "best", "first"
  accept_bot: true # accepts challenges coming from other bots
  variants: # chess variants to accept (http://lichess.org/variant)
    - standard
    - fromPosition
  time_controls: # time controls to accept
    - ultraBullet
    - bullet
    - blitz
    - rapid
    - classical
  modes: # game modes to accept
    - casual # unrated games
    - rated # rated games - must comment if the engine doesn't try to win

matchmaking:  # outgoing challenges
  allow_matchmaking: true
  challenge_variant: "random"
  challenge_initial_time:
    - 60
    - 180
    - 600
  challenge_increment:
    - 0
    - 1
    - 3
  challenge_mode: "rated"
  challenge_filter: "fine"
  opponent_rating_difference: 200
  opponent_allow_tos_violation: false
  allow_during_games: true
