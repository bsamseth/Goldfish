#ifndef EVALUATE_H
#define EVALUATE_H

#include "types.h"
#include "position.h"

#include <map>
#include <vector>

/* Piece value tables, taken from github.com/thomasahle/sunfish.
 * Values are assumed to be symetric along the file-axis. */
const std::map<PieceType, std::vector<int>> piece_values = {
    { PAWN,   { 198, 198, 198, 198, 198, 198, 198, 198,
                178, 198, 198, 198, 198, 198, 198, 178,
                178, 198, 198, 198, 198, 198, 198, 178,
                178, 198, 208, 218, 218, 208, 198, 178,
                178, 198, 218, 238, 238, 218, 198, 178,
                178, 198, 208, 218, 218, 208, 198, 178,
                178, 198, 198, 198, 198, 198, 198, 178,
                198, 198, 198, 198, 198, 198, 198, 198 } },
    { BISHOP, { 797, 824, 817, 808, 808, 817, 824, 797,
                814, 841, 834, 825, 825, 834, 841, 814,
                818, 845, 838, 829, 829, 838, 845, 818,
                824, 851, 844, 835, 835, 844, 851, 824,
                827, 854, 847, 838, 838, 847, 854, 827,
                826, 853, 846, 837, 837, 846, 853, 826,
                817, 844, 837, 828, 828, 837, 844, 817,
                792, 819, 812, 803, 803, 812, 819, 792 } },
    { KNIGHT, { 627, 762, 786, 798, 798, 786, 762, 627,
                763, 798, 822, 834, 834, 822, 798, 763,
                817, 852, 876, 888, 888, 876, 852, 817,
                797, 832, 856, 868, 868, 856, 832, 797,
                799, 834, 858, 870, 870, 858, 834, 799,
                758, 793, 817, 829, 829, 817, 793, 758,
                739, 774, 798, 810, 810, 798, 774, 739,
                683, 718, 742, 754, 754, 742, 718, 683 } },
    { ROOK, { 1258, 1263, 1268, 1272, 1272, 1268, 1263, 1258,
              1258, 1263, 1268, 1272, 1272, 1268, 1263, 1258,
              1258, 1263, 1268, 1272, 1272, 1268, 1263, 1258,
              1258, 1263, 1268, 1272, 1272, 1268, 1263, 1258,
              1258, 1263, 1268, 1272, 1272, 1268, 1263, 1258,
              1258, 1263, 1268, 1272, 1272, 1268, 1263, 1258,
              1258, 1263, 1268, 1272, 1272, 1268, 1263, 1258,
              1258, 1263, 1268, 1272, 1272, 1268, 1263, 1258 } },
    { QUEEN, { 2529, 2529, 2529, 2529, 2529, 2529, 2529, 2529,
               2529, 2529, 2529, 2529, 2529, 2529, 2529, 2529,
               2529, 2529, 2529, 2529, 2529, 2529, 2529, 2529,
               2529, 2529, 2529, 2529, 2529, 2529, 2529, 2529,
               2529, 2529, 2529, 2529, 2529, 2529, 2529, 2529,
               2529, 2529, 2529, 2529, 2529, 2529, 2529, 2529,
               2529, 2529, 2529, 2529, 2529, 2529, 2529, 2529,
               2529, 2529, 2529, 2529, 2529, 2529, 2529, 2529, } },
    { KING, { 60098, 60132, 60073, 60025, 60025, 60073, 60132, 60098,
              60119, 60153, 60094, 60046, 60046, 60094, 60153, 60119,
              60146, 60180, 60121, 60073, 60073, 60121, 60180, 60146,
              60173, 60207, 60148, 60100, 60100, 60148, 60207, 60173,
              60196, 60230, 60171, 60123, 60123, 60171, 60230, 60196,
              60224, 60258, 60199, 60151, 60151, 60199, 60258, 60224,
              60287, 60321, 60262, 60214, 60214, 60262, 60321, 60287,
              60298, 60332, 60273, 60225, 60225, 60273, 60332, 60298 } }
};

int evaluate(const Position & pos);


#endif /* ifndef EVAULATE_H */
